package shopping.akshar.com.shopping.fragment;import android.content.Context;import android.content.SharedPreferences;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentTransaction;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.bumptech.glide.Glide;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import java.util.HashMap;import java.util.Map;import shopping.akshar.com.shopping.R;import shopping.akshar.com.shopping.pojo.Cartmodel;import shopping.akshar.com.shopping.pojo.firebasemodel;/** * A simple {@link Fragment} subclass. */public class ProductdetailFragment extends Fragment {    Cartmodel cartmodels;    firebasemodel model;    //  List<Cartmodel> cartmodels;    ImageView image;    TextView detail_pname, detail_price, detail_desc, p_id, mainprice;    FloatingActionButton add_cart, buy;    private FirebaseAuth mAuth;    DatabaseReference myRef;    FirebaseUser firebaseUser;    String URL = "http://eunidripapp.eunidripirrigationsystems.com/app_apis/cart.php";    TextView click_review;    SharedPreferences sharedPreferences;    private static final String PREF_NAME = "Shopping";    private static final String KEY_EMAIL = "Email";    private static final String KEY_USER_ID = "User UID";    public ProductdetailFragment() {        // Required empty public constructor    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View view = inflater.inflate(R.layout.profuct_information, container, false);        p_id = view.findViewById(R.id.p_id);        mainprice = view.findViewById(R.id.miniprice);        image = view.findViewById(R.id.image);        detail_pname = view.findViewById(R.id.detail_pname);        detail_price = view.findViewById(R.id.detail_price);        detail_desc = view.findViewById(R.id.detail_desc);        add_cart = view.findViewById(R.id.add_cart);        buy = view.findViewById(R.id.buy);        click_review = view.findViewById(R.id.click_review);        //CollapsingToolbarLayout collapsingToolbarLayout = view.findViewById(R.id.collapsingtoolbar_id);        //collapsingToolbarLayout.setTitleEnabled(true);        sharedPreferences = getContext().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);        cartmodels = new Cartmodel();        model = new firebasemodel();        firebaseUser = FirebaseAuth.getInstance().getCurrentUser();        binddata();        mAuth = FirebaseAuth.getInstance();        add_cart.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                /* addto_cart(); */                addtocart();            }        });        buy.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                buynow();            }        });        click_review.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                ReviewsWatch();            }        });        return view;    }    private void ReviewsWatch() {        FragmentManager manager = getFragmentManager();        assert manager != null;        FragmentTransaction transaction = manager.beginTransaction();        transaction.replace(R.id.frame_main, new ViewReviewFragment());        transaction.addToBackStack(null);        transaction.commit();    }    private void buynow() {        firebaseUser.getUid();        if (p_id != null) {            String buy_Now = "http://eunidripapp.eunidripirrigationsystems.com/app_apis/purchaseNew.php";            StringRequest stringRequest = new StringRequest(Request.Method.POST, buy_Now, new Response.Listener<String>() {                @Override                public void onResponse(String response) {                    Toast.makeText(getActivity(), response, Toast.LENGTH_SHORT).show();                }            }, new Response.ErrorListener() {                @Override                public void onErrorResponse(VolleyError error) {                    Toast.makeText(getActivity(), error.getMessage(), Toast.LENGTH_SHORT).show();                }            }) {                @Override                protected Map<String, String> getParams() {                    HashMap<String, String> params = new HashMap<>();                    params.put("token", firebaseUser.getUid());                    Bundle bundle = getArguments();                    String product_id = bundle.getString("product_id");                    params.put("product_id", product_id);                    return params;                }            };            RequestQueue requestQueue = Volley.newRequestQueue(getActivity());            requestQueue.add(stringRequest);        } else {            Toast.makeText(getActivity(), "Error", Toast.LENGTH_SHORT).show();        }    }    private void addtocart() {        firebasemodel model = new firebasemodel();        Bundle bundle = getArguments();        String id = mAuth.getUid();        String name = bundle.getString("product_name");        String price = bundle.getString("price");        model.setName(name);        model.setPrice(price);        DatabaseReference  ref= FirebaseDatabase.getInstance().getReference("cartInformation").child(id);        String cartKey = ref.push().getKey();        myRef = FirebaseDatabase.getInstance().getReference().child("cartInformation").child(id).child(cartKey);        HashMap map = new HashMap();        map.put("Product_Name", name);        map.put("product_price", price);        ref.child(cartKey).updateChildren(map);        Toast.makeText(getActivity(), "successfully Add Into Cart", Toast.LENGTH_SHORT).show();        addto_cart();    }    // add data on cart table user id get successful but product id not get    private void addto_cart() {        //if user id null then not add value on cart table automatic force close app        firebaseUser.getUid();        if (p_id != null) {            StringRequest stringRequest = new StringRequest(Request.Method.POST, URL, new Response.Listener<String>() {                @Override                public void onResponse(String response) {                    Toast.makeText(getActivity(), "successfully Add Into Cart", Toast.LENGTH_SHORT).show();                }            }, new Response.ErrorListener() {                @Override                public void onErrorResponse(VolleyError error) {                    Toast.makeText(getActivity(), error.getMessage(), Toast.LENGTH_SHORT).show();                }            }) {                @Override                protected Map<String, String> getParams() {                    Map<String, String> params = new HashMap<>();                    params.put("token", firebaseUser.getUid());  //Its a Reference Key Of User succesfull fetch                    Bundle bundle = getArguments();                    String product_id = bundle.getString("product_id");                    params.put("product_id", product_id);                    return params;                }            };            RequestQueue requestQueue = Volley.newRequestQueue(getActivity());            requestQueue.add(stringRequest);        } else {            Toast.makeText(getActivity(), "error", Toast.LENGTH_SHORT).show();        }    }    //get data FROM Productpage    private void binddata() {        Bundle bundle = getArguments();        String product_id = bundle.getString("product_id");        String name = bundle.getString("product_name");        String price = bundle.getString("price");        String description = bundle.getString("product_desc");        String imageurl = bundle.getString("product_image");        String maxprice = bundle.getString("max_price");        p_id.setText(product_id);        mainprice.setText(maxprice);        detail_pname.setText(name);        detail_price.setText(price);        detail_desc.setText(description);        Glide.with(this).load(imageurl).into(image);    }}